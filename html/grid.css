.container {
    display: grid;
    height: 500px;
    /* minmax(최소, 최대) */
    /* grid-template-columns: repeat(3, minmax(100px, auto)); */
    grid-template-columns: repeat(3, 200px);
    grid-template-rows: repeat(3, 200px);

    grid-template-areas: 
    'header header header'
    'nav main aside'
    'footer footer footer';
    /* grid areas이름을 주는 것 
     띄어쓰기 기준 칸을 비우고 싶다면 . 으로 적어주기 */


    /* grid-template-rows: repeat(3, 200px); */
    /* row-gap: 20px;
    column-gap: 20px; */
    /* gap: 20px 10px; */
    /* gap: 20px; */
    /* justify-items: center;
    align-items: center; */
    /* place-items: center; */
    /* place-items: end; */
    /* ~~~-items : item 요소(자식 요소)가 존재할 수 있는 영역 내에서 정렬 */

    /* justify-content: center;
    align-content: center;
    /* place-content: center; */
    /* ????-content : container 영역 내에서 부모 요소 자체를 정렬 */
}




/* .item{
    width: 100px;
    height: 100px; 
} */
.red{
    /* order: 1;
    /* 배치 숫자값지정 order은 음수값도 가능가급적이면 하지마셈 */
    /* place-self: center;
    영역내에서 center  */
    background-color: red; 
    grid-area: header;
    /* grid-column:1/4; */
}

.orange{
    background-color: orange;
    grid-area: nav;
    /* order: 2; */
    
    /* grid-row : auto/span 2; */
}

.yellow{
    background-color: yellow;
    grid-area: main;
    /* justify-self: center;
    align-self: center;
    place-self: center; */
}

.green{
    background-color: green;
    grid-area: aside;
    /* width: 500px;
    z-index: 1; */
}

.blue{
    background-color: blue;
    grid-area:footer;
}

/* .navy{
    background-color: navy;
}
.purple{
    background-color: purple;
} */