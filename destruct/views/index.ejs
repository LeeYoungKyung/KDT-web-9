<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

        <title>Document</title>
    </head>
    <body>
        <h1>싱글 연습/동기식</h1>
        <form action="/upload" method="post" enctype="multipart/form-data">
            <input type="file" name="userfile"><br>
            <input type="text" name="title"><br>
            <button type="submit">업로드</button>
            

        </form>

        <h1>멀티 연습 ver1 : 한번에 여러개</h1>
        <form action="/upload/array" method="post" enctype="multipart/form-data">
            <input type="file" name="userfiles" multiple> <br>
            <input type="text" name="title"><br>
            <button type="submit">업로드</button>
        </form>

        <h1>멀티 연습 ver2 : 여러개의 요청</h1>
        <form action="/upload/fields" method="post" enctype="multipart/form-data">
            <input type="file" name="userfile1" > <br>
            <input type="text" name="title1"><br>
            <input type="file" name="userfile2"><br>
            <input type="text" name="title2"><br>
            <button type="submit">업로드</button>
        </form>

        <h1>동적파일 업로드</h1>
        <form onsubmit="fileupload(event)">
            <input type="file" id="dynamic"><br>
            <input type="text" id="title"><br>
            <button type="submit">업로드</button>
        </form>
        <br>
        <div class="result"></div>
        <script>
            const resultBox = document.querySelector('.result')

            async function fileupload(event){
                event.preventDefault();//기본 제출 동작을 막음
                console.log('file upload')
                const title = document.querySelector('#title').value
                //파일에 접근하기 위해서 file.files사용하는 것이고
                //file.files는 배열을 반환하며 우리가 원하는 것은
                //첫번째 파일이기 때문에 file.files[0] 사용
                const file = document.querySelector('#dynamic');
                console.log(file.files[0])
                //js 내장 객체 중 하나로 데이터만 받아서 넘기려는 동적 파일을 폼에 담에서 보낼 수 있게 폼을 만드는 과정
                const formData = new FormData()
                //append(key,value)의 형태 ==객체 형태
                //중요중요 파일은 항상 마지막에 선언해줘야 함 multer가 파일을 읽어버리면 그냥 넘어가기 때문에 파일은 젤 마지막에
                formData.append('title',title)
                formData.append('dynamic',file.files[0])

                const res = await axios({
                    method :'POST',
                    url :'/dynamic',
                    data : formData,
                    headers : {
                        'Content-Type':'multipart/form-data',
                    }
                })
                console.log('res',res)
                resultBox.innerHTML=`<img src=${res.data.path}>`
            }
        </script>
    </body>
</html>
